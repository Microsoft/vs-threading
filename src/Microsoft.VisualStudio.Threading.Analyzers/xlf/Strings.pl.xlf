<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="pl" original="../Strings.resx">
    <body>
      <trans-unit id="AwaitXInstead" translate="yes" xml:space="preserve">
        <source>Await {0} instead</source>
        <target state="translated">Zamiast tego oczekuj na {0}</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.
{0} is a method name.</note>
      </trans-unit>
      <trans-unit id="SystemIAsyncDisposablePackageNote">
        <source>The System.IAsyncDisposable interface is defined in the Microsoft.Bcl.AsyncInterfaces NuGet package.</source>
        <target state="translated">Interfejs System.IAsyncDisposable jest zdefiniowany w pakiecie NuGet Microsoft.Bcl.AsyncInterfaces.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseAwaitInstead" translate="yes" xml:space="preserve">
        <source>Use await instead</source>
        <target state="translated">Zamiast tego używaj oczekiwania</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD001_MessageFormat" translate="yes" xml:space="preserve">
        <source>Await JoinableTaskFactory.SwitchToMainThreadAsync() to switch to the UI thread instead of APIs that can deadlock or require specifying a priority.</source>
        <target state="translated">Zaczekaj, aż metoda JoinableTaskFactory.SwitchToMainThreadAsync() przełączy się do wątku interfejsu użytkownika zamiast interfejsów API, które mogą ulec zakleszczeniu lub wymagać określenia priorytetu.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD001_Title" translate="yes" xml:space="preserve">
        <source>Avoid legacy thread switching APIs</source>
        <target state="translated">Unikaj starszych interfejsów API przełączających wątki</target>
        <note from="MultilingualBuild" annotates="source" priority="2">thread switching APIs refers to Visual Studio SDK or .NET methods that can be used to switch threads, but are obsolete and should be avoided.</note>
      </trans-unit>
      <trans-unit id="VSTHRD002_CodeFix_Await_Title" translate="yes" xml:space="preserve">
        <source>Use await instead</source>
        <target state="translated">Zamiast tego używaj oczekiwania</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD002_MessageFormat" translate="yes" xml:space="preserve">
        <source>Synchronously waiting on tasks or awaiters may cause deadlocks. Use await or JoinableTaskFactory.Run instead.</source>
        <target state="translated">Synchroniczne oczekiwanie na zadania lub elementy typu awaiter mogą powodować zakleszczenia. Zamiast tego używaj metody await lub JoinableTaskFactory.Run.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD002_Title" translate="yes" xml:space="preserve">
        <source>Avoid problematic synchronous waits</source>
        <target state="translated">Unikaj problematycznych oczekiwań synchronicznych</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD003_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid awaiting or returning a Task representing work that was not started within your context as that can lead to deadlocks.
Start the work within this context, or use JoinableTaskFactory.RunAsync to start the task and await the returned JoinableTask instead.</source>
        <target state="translated">Unikaj oczekiwania na obiekt Task lub zwracania obiektu Task reprezentującego pracę, która nie została uruchomiona w danym kontekście, ponieważ może to prowadzić do zakleszczeń.
Uruchom pracę w tym kontekście lub zamiast tego użyj metody JoinableTaskFactory.RunAsync w celu uruchomienia zadania i oczekuj na zwrócony obiekt JoinableTask.</target>
        <note from="MultilingualUpdate" annotates="source" priority="2" />
      </trans-unit>
      <trans-unit id="VSTHRD003_Title" translate="yes" xml:space="preserve">
        <source>Avoid awaiting foreign Tasks</source>
        <target state="translated">Unikaj oczekiwania na obce obiekty Task</target>
        <note from="MultilingualUpdate" annotates="source" priority="2" />
      </trans-unit>
      <trans-unit id="VSTHRD004_MessageFormat" translate="yes" xml:space="preserve">
        <source>Calls to JoinableTaskFactory.SwitchToMainThreadAsync() must be awaited.</source>
        <target state="translated">Należy zaczekać na wywołania metody JoinableTaskFactory.SwitchToMainThreadAsync().</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD004_Title" translate="yes" xml:space="preserve">
        <source>Await SwitchToMainThreadAsync</source>
        <target state="translated">Zaczekaj na metodę SwitchToMainThreadAsync</target>
        <note from="MultilingualBuild" annotates="source" priority="2">Do not translate either of these. The first is a keyword, the second is a method name.</note>
      </trans-unit>
      <trans-unit id="VSTHRD010_MessageFormat_Async" translate="yes" xml:space="preserve">
        <source>Accessing "{0}" should only be done on the main thread. Await JoinableTaskFactory.SwitchToMainThreadAsync() first.</source>
        <target state="translated">Dostęp do metody „{0}” powinien być uzyskiwany tylko z wątku głównego. Najpierw zaczekaj na metodę JoinableTaskFactory.SwitchToMainThreadAsync().</target>
        <note from="MultilingualBuild" annotates="source" priority="2">{0} is a type or member name.</note>
      </trans-unit>
      <trans-unit id="VSTHRD010_MessageFormat_Sync" translate="yes" xml:space="preserve">
        <source>Accessing "{0}" should only be done on the main thread. Call {1}() first.</source>
        <target state="translated">Dostęp do metody „{0}” powinien być uzyskiwany tylko z wątku głównego. Najpierw wywołaj metodę {1}().</target>
        <note from="MultilingualBuild" annotates="source" priority="2">{0} is a type or member name and {1} is the name of a method that throws if not called from the main thread.</note>
      </trans-unit>
      <trans-unit id="VSTHRD010_Title" translate="yes" xml:space="preserve">
        <source>Invoke single-threaded types on Main thread</source>
        <target state="translated">Wywołuj typy jednowątkowe w wątku głównym</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD011_MessageFormat" translate="yes" xml:space="preserve">
        <source>Lazy&lt;Task&lt;T&gt;&gt;.Value can deadlock.
Use AsyncLazy&lt;T&gt; instead.</source>
        <target state="translated">Element Lazy&lt;Task&lt;T&gt;&gt;.Value może ulec zakleszczeniu.
Zamiast tego używaj klasy AsyncLazy&lt;T&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD011_Title" translate="yes" xml:space="preserve">
        <source>Use AsyncLazy&lt;T&gt;</source>
        <target state="translated">Użyj klasy AsyncLazy&lt;T&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD011b_MessageFormat" translate="yes" xml:space="preserve">
        <source>Invoking or blocking on async code in a Lazy&lt;T&gt; value factory can deadlock.
Use AsyncLazy&lt;T&gt; instead.</source>
        <target state="translated">Wywołanie kodu asynchronicznego lub zablokowanie na nim w fabryce wartości Lazy&lt;T&gt; może spowodować zakleszczenie.
Zamiast tego użyj elementu AsyncLazy&lt;T&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD012_MessageFormat" translate="yes" xml:space="preserve">
        <source>Provide an instance of JoinableTaskFactory in this call (or another overload) to avoid deadlocks with the main thread.</source>
        <target state="translated">Podaj wystąpienie elementu JoinableTaskFactory w tym wywołaniu (albo innym przeciążeniu), aby uniknąć zakleszczeń w wątku głównym.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD012_Title" translate="yes" xml:space="preserve">
        <source>Provide JoinableTaskFactory where allowed</source>
        <target state="translated">Podaj element JoinableTaskFactory w miejscach, gdzie jest to dopuszczalne</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD100_CodeFix_Title" translate="yes" xml:space="preserve">
        <source>Change return type to Task</source>
        <target state="translated">Zmień zwracany typ na Task</target>
        <note from="MultilingualBuild" annotates="source" priority="2">Task is a type name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD100_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid "async void" methods, because any exceptions not handled by the method will crash the process.</source>
        <target state="translated">Unikaj metod „async void”, ponieważ wszelkie wyjątki, które nie zostaną przez nie obsłużone, spowodują awarię procesu.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"async void" is a pair of C# keywords. Do not translate them.</note>
      </trans-unit>
      <trans-unit id="VSTHRD100_Title" translate="yes" xml:space="preserve">
        <source>Avoid async void methods</source>
        <target state="translated">Unikaj metod „async void”</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"async void" is a pair of C# keywords. Do not translate them.</note>
      </trans-unit>
      <trans-unit id="VSTHRD101_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid using async lambda for a void returning delegate type, because any exceptions not handled by the delegate will crash the process.</source>
        <target state="translated">Unikaj używania asynchronicznego wyrażenia lambda dla typu delegata zwracającego „void”, ponieważ wszelkie wyjątki, które nie zostaną obsłużone przez delegata, spowodują awarię procesu.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"void" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD101_Title" translate="yes" xml:space="preserve">
        <source>Avoid unsupported async delegates</source>
        <target state="translated">Unikaj nieobsługiwanych delegatów asynchronicznych</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD102_MessageFormat" translate="yes" xml:space="preserve">
        <source>Limit use of synchronously blocking method calls such as JoinableTaskFactory.Run or Task.Result to public entrypoint members where you must be synchronous. Using it for internal members can needlessly add synchronous frames between asynchronous frames, leading to threadpool exhaustion.</source>
        <target state="translated">Ogranicz stosowanie wywołań metod z blokowaniem synchronicznym, takich jak JoinableTaskFactory.Run lub Task.Result, do publicznych elementów członkowskich punktów wyjścia, w przypadku których konieczne jest działanie synchroniczne. Stosowanie tego rozwiązania w przypadku wewnętrznych elementów członkowskich może powodować niepotrzebne dodawanie ramek synchronicznych między ramkami asynchronicznymi, co może prowadzić do wyczerpania puli wątków.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD102_Title" translate="yes" xml:space="preserve">
        <source>Implement internal logic asynchronously</source>
        <target state="translated">Logikę wewnętrzną implementuj asynchronicznie</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD103_MessageFormat" translate="yes" xml:space="preserve">
        <source>{0} synchronously blocks. Await {1} instead.</source>
        <target state="translated">Metoda {0} powoduje blokowanie synchroniczne. Zamiast tego oczekuj na {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD103_MessageFormat_UseAwaitInstead" translate="yes" xml:space="preserve">
        <source>{0} synchronously blocks. Use await instead.</source>
        <target state="translated">Metoda {0} powoduje blokowanie synchroniczne. Zamiast tego używaj oczekiwania.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD103_Title" translate="yes" xml:space="preserve">
        <source>Call async methods when in an async method</source>
        <target state="translated">W metodach asynchronicznych wywołuj metody asynchroniczne</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD104_MessageFormat" translate="yes" xml:space="preserve">
        <source>Expose an async version of this method that does not synchronously block. Then simplify this method to call that async method within a JoinableTaskFactory.Run delegate.</source>
        <target state="translated">Uwidocznij asynchroniczną wersję tej metody, która nie powoduje synchronicznego blokowania. Następnie uprość tę metodę, aby wywołać tę metodę asynchroniczną w ramach delegata JoinableTaskFactory.Run.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD104_Title" translate="yes" xml:space="preserve">
        <source>Offer async methods</source>
        <target state="translated">Oferuj metody asynchroniczne</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD105_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid method overloads that assume TaskScheduler.Current. Use an overload that accepts a TaskScheduler and specify TaskScheduler.Default (or any other) explicitly.</source>
        <target state="translated">Unikaj przeciążeń metod zakładających korzystanie z właściwości TaskScheduler.Current. Używaj przeciążenia przyjmującego obiekt TaskScheduler i jawnie określaj właściwość TaskScheduler.Default (lub inną).</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD105_Title" translate="yes" xml:space="preserve">
        <source>Avoid method overloads that assume TaskScheduler.Current</source>
        <target state="translated">Unikaj przeciążeń metod zakładających korzystanie z właściwości TaskScheduler.Current</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD106_MessageFormat" translate="yes" xml:space="preserve">
        <source>AsyncEventHandler delegates should be invoked via the extension method "TplExtensions.InvokeAsync()" defined in Microsoft.VisualStudio.Threading assembly.</source>
        <target state="translated">Delegatów AsyncEventHandler powinno się wywoływać za pośrednictwem metody rozszerzenia „TplExtensions.InvokeAsync()” zdefiniowanej w zestawie Microsoft.VisualStudio.Threading.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD106_Title" translate="yes" xml:space="preserve">
        <source>Use InvokeAsync to raise async events</source>
        <target state="translated">Zdarzenia asynchroniczne wywołuj za pomocą metody InvokeAsync</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD107_CodeFix_Title" translate="yes" xml:space="preserve">
        <source>Await using expression</source>
        <target state="translated">Oczekuj w wyrażeniu using</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" and "using" are C# keywords and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD107_MessageFormat" translate="yes" xml:space="preserve">
        <source>Missing await operator for "using" expression.</source>
        <target state="translated">Brak operatora await dla wyrażenia „using”.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" and "using" are C# keywords and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD107_Title" translate="yes" xml:space="preserve">
        <source>Await Task within using expression</source>
        <target state="translated">Oczekuj na zadanie wewnątrz wyrażenia using</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await Task" is a C# compound term, and "using" is a C# keyword. These should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD108_MessageFormat" translate="yes" xml:space="preserve">
        <source>Thread affinity checks should be unconditional.</source>
        <target state="translated">Testy koligacji wątku powinny być bezwarunkowe.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD108_Title" translate="yes" xml:space="preserve">
        <source>Assert thread affinity unconditionally</source>
        <target state="translated">Bezwarunkowo potwierdź koligację wątku</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD109_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid throwing when not on the main thread while in an async or Task-returning method. Switch to the thread required instead.</source>
        <target state="translated">Unikaj zgłaszania poza wątkiem głównym w metodzie asynchronicznej lub zwracającej element Task. Zamiast tego przełącz się na wymagany wątek.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD109_Title" translate="yes" xml:space="preserve">
        <source>Switch instead of assert in async methods</source>
        <target state="translated">Przełączanie zamiast asercji w metodach asynchronicznych</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD110_MessageFormat" translate="yes" xml:space="preserve">
        <source>Observe the awaitable result of this method call by awaiting it, assigning to a variable, or passing it to another method.</source>
        <target state="translated">Obserwuj wynik typu awaitable wywołania tej metody, oczekując na niego, przypisując go do zmiennej lub przekazując do innej metody.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD110_Title" translate="yes" xml:space="preserve">
        <source>Observe result of async calls</source>
        <target state="translated">Obserwuj wynik wywołań asynchronicznych</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD111_CodeFix_False_Title" translate="yes" xml:space="preserve">
        <source>Add .ConfigureAwait(false)</source>
        <target state="translated">Dodaj ciąg .ConfigureAwait(false)</target>
        <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(false)" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD111_CodeFix_True_Title" translate="yes" xml:space="preserve">
        <source>Add .ConfigureAwait(true)</source>
        <target state="translated">Dodaj ciąg .ConfigureAwait(true)</target>
        <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(true)" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD111_MessageFormat" translate="yes" xml:space="preserve">
        <source>Add .ConfigureAwait(bool) to your await expression.</source>
        <target state="translated">Dodaj ciąg.ConfigureAwait(bool) do swojego wyrażenia await.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(bool)" and "await" should NOT be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD111_Title" translate="yes" xml:space="preserve">
        <source>Use ConfigureAwait(bool)</source>
        <target state="translated">Użyj metody ConfigureAwait(bool)</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"ConfigureAwait(bool)" is a reference and should NOT be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD112_CodeFix_Title">
        <source>Add implementation of System.IAsyncDisposable.</source>
        <target state="translated">Dodaj implementację interfejsu System.IAsyncDisposable.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD112_MessageFormat">
        <source>Implement the System.IAsyncDisposable interface when implementing the obsolete Microsoft.VisualStudio.Threading.IAsyncDisposable interface.</source>
        <target state="translated">Zaimplementuj interfejs System.IAsyncDisposable, gdy implementujesz przestarzały interfejs Microsoft.VisualStudio.Threading.IAsyncDisposable.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD112_Title">
        <source>Implement System.IAsyncDisposable</source>
        <target state="translated">Zaimplementuj interfejs System.IAsyncDisposable</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD113_MessageFormat">
        <source>Add a check for System.IAsyncDisposable in the same code block that checks for Microsoft.VisualStudio.Threading.IAsyncDisposable that behaves similarly.</source>
        <target state="translated">Dodaj sprawdzenie obecności interfejsu System.IAsyncDisposable w tym samym bloku kodu, który sprawdza obecność interfejsu Microsoft.VisualStudio.Threading.IAsyncDisposable zachowującego się podobnie.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD113_Title">
        <source>Check for System.IAsyncDisposable</source>
        <target state="translated">Sprawdź obecność interfejsu System.IAsyncDisposable</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD114_CodeFix_CompletedTask">
        <source>Use 'Task.CompletedTask' instead</source>
        <target state="translated">Zamiast tego użyj właściwości „Task.CompletedTask”</target>
        <note>"Task.CompletedTask" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD114_CodeFix_FromResult">
        <source>Use 'Task.FromResult' instead</source>
        <target state="translated">Zamiast tego użyj metody „Task.FromResult”</target>
        <note>"Task.FromResult" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD114_MessageFormat">
        <source>Avoid returning null from a Task-returning method.</source>
        <target state="translated">Unikaj zwracania wartości null z metody zwracającej zadanie.</target>
        <note>Task is a type name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD114_Title">
        <source>Avoid returning a null Task</source>
        <target state="translated">Unikaj zwracania zadania o wartości null</target>
        <note>Task is a type name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD200_AddAsync_MessageFormat" translate="yes" xml:space="preserve">
        <source>Use "Async" suffix in names of methods that return an awaitable type.</source>
        <target state="translated">Używaj sufiksu „Async” w nazwach metod zwracających typ awaitable.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD200_CodeFix_Title" translate="yes" xml:space="preserve">
        <source>Rename to {0}</source>
        <target state="translated">Zmień nazwę na: {0}</target>
        <note from="MultilingualBuild" annotates="source" priority="2">{0} is a method name.</note>
      </trans-unit>
      <trans-unit id="VSTHRD200_RemoveAsync_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid "Async" suffix in names of methods that do not return an awaitable type.</source>
        <target state="translated">Unikaj sufiksu „Async” w nazwach metod nie zwracających typu awaitable.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD200_Title" translate="yes" xml:space="preserve">
        <source>Use "Async" suffix for async methods</source>
        <target state="translated">W przypadku metod asynchronicznych używaj sufiksu „Async”</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD201_CodeFix_Title">
        <source>Call ThrowIfCancellationRequested()</source>
        <target state="translated">Wywoływanie metody ThrowIfCancellationRequested()</target>
        <note>"ThrowIfCancellationRequested" is a method name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD201_MessageFormat">
        <source>Check for cancellation after calling SwitchToMainThreadAsync(CancellationToken).</source>
        <target state="translated">Sprawdź pod kątem anulowania po wywołaniu metody SwitchToMainThreadAsync(CancellationToken).</target>
        <note>"SwitchToMainThreadAsync" is a method name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD201_Title">
        <source>Check cancellation after SwitchToMainThreadAsync</source>
        <target state="translated">Sprawdzanie anulowania po metodzie SwitchToMainThreadAsync</target>
        <note>"SwitchToMainThreadAsync" is a method name and should not be translated.</note>
      </trans-unit>
    </body>
  </file>
</xliff>