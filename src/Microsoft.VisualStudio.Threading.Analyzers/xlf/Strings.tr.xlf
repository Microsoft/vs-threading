<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="tr" original="../Strings.resx">
    <body>
      <trans-unit id="AwaitXInstead" translate="yes" xml:space="preserve">
        <source>Await {0} instead</source>
        <target state="translated">Bunun yerine: Await {0}</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.
{0} is a method name.</note>
      </trans-unit>
      <trans-unit id="SystemIAsyncDisposablePackageNote">
        <source>The System.IAsyncDisposable interface is defined in the Microsoft.Bcl.AsyncInterfaces NuGet package.</source>
        <target state="translated">System.IAsyncDisposable arabirimi Microsoft.Bcl.AsyncInterfaces NuGet paketinde tanımlanmıştır.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseAwaitInstead" translate="yes" xml:space="preserve">
        <source>Use await instead</source>
        <target state="translated">Bunun yerine await kullanın</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD001_MessageFormat" translate="yes" xml:space="preserve">
        <source>Await JoinableTaskFactory.SwitchToMainThreadAsync() to switch to the UI thread instead of APIs that can deadlock or require specifying a priority.</source>
        <target state="translated">Kilitlenebilen ya da öncelik belirtilmesini gerektiren API’ler yerine JoinableTaskFactory.SwitchToMainThreadAsync() öğesinin UI iş parçacığına geçmesini bekleyin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD001_Title" translate="yes" xml:space="preserve">
        <source>Avoid legacy thread switching APIs</source>
        <target state="translated">İş parçacıkları arasında geçiş yapan eski API’lerden kaçının</target>
        <note from="MultilingualBuild" annotates="source" priority="2">thread switching APIs refers to Visual Studio SDK or .NET methods that can be used to switch threads, but are obsolete and should be avoided.</note>
      </trans-unit>
      <trans-unit id="VSTHRD002_CodeFix_Await_Title" translate="yes" xml:space="preserve">
        <source>Use await instead</source>
        <target state="translated">Bunun yerine await kullanın</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD002_MessageFormat" translate="yes" xml:space="preserve">
        <source>Synchronously waiting on tasks or awaiters may cause deadlocks. Use await or JoinableTaskFactory.Run instead.</source>
        <target state="translated">Görevlerde veya bekleyen öğelerde zaman uyumlu olarak beklemek kilitlenmelere neden olabilir. Bunun yerine bekleyen veya JoinableTaskFactory.Run kullanın.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD002_Title" translate="yes" xml:space="preserve">
        <source>Avoid problematic synchronous waits</source>
        <target state="translated">Sorunlu zaman uyumlu beklemelerden kaçının</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD003_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid awaiting or returning a Task representing work that was not started within your context as that can lead to deadlocks.
Start the work within this context, or use JoinableTaskFactory.RunAsync to start the task and await the returned JoinableTask instead.</source>
        <target state="translated">Çıkmazlara yol açabileceğinden, bağlamınızda başlatılmamış işi temsil eden bir Görevi beklemekten veya döndürmekten kaçının.
İşi bu bağlamda başlatın veya bunun yerine görevi başlatmak için JoinableTaskFactory.RunAsync kullanıp döndürülen JoinableTask öğesini bekleyin.</target>
        <note from="MultilingualUpdate" annotates="source" priority="2" />
      </trans-unit>
      <trans-unit id="VSTHRD003_Title" translate="yes" xml:space="preserve">
        <source>Avoid awaiting foreign Tasks</source>
        <target state="translated">Yabancı Görevleri beklemekten kaçının</target>
        <note from="MultilingualUpdate" annotates="source" priority="2" />
      </trans-unit>
      <trans-unit id="VSTHRD004_MessageFormat" translate="yes" xml:space="preserve">
        <source>Calls to JoinableTaskFactory.SwitchToMainThreadAsync() must be awaited.</source>
        <target state="translated">JoinableTaskFactory.SwitchToMainThreadAsync() çağrıları beklenmelidir.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD004_Title" translate="yes" xml:space="preserve">
        <source>Await SwitchToMainThreadAsync</source>
        <target state="translated">SwitchToMainThreadAsync bekleyin</target>
        <note from="MultilingualBuild" annotates="source" priority="2">Do not translate either of these. The first is a keyword, the second is a method name.</note>
      </trans-unit>
      <trans-unit id="VSTHRD010_MessageFormat_Async" translate="yes" xml:space="preserve">
        <source>Accessing "{0}" should only be done on the main thread. Await JoinableTaskFactory.SwitchToMainThreadAsync() first.</source>
        <target state="translated">"{0}" erişimi yalnızca ana iş parçacığı üzerinde gerçekleştirilmelidir. Önce JoinableTaskFactory.SwitchToMainThreadAsync() metodunu bekleyin.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">{0} is a type or member name.</note>
      </trans-unit>
      <trans-unit id="VSTHRD010_MessageFormat_Sync" translate="yes" xml:space="preserve">
        <source>Accessing "{0}" should only be done on the main thread. Call {1}() first.</source>
        <target state="translated">"{0}" erişimi yalnızca ana iş parçacığı üzerinde gerçekleştirilmelidir. Önce {1}() çağırın.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">{0} is a type or member name and {1} is the name of a method that throws if not called from the main thread.</note>
      </trans-unit>
      <trans-unit id="VSTHRD010_Title" translate="yes" xml:space="preserve">
        <source>Invoke single-threaded types on Main thread</source>
        <target state="translated">Ana iş parçacığındaki tek iş parçacıklı türleri çağırın</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD011_MessageFormat" translate="yes" xml:space="preserve">
        <source>Lazy&lt;Task&lt;T&gt;&gt;.Value can deadlock.
Use AsyncLazy&lt;T&gt; instead.</source>
        <target state="translated">Lazy&lt;Task&lt;T&gt;&gt;.Değer kilitlenebilir.
Bunun yerine AsyncLazy&lt;T&gt; kullanın.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD011_Title" translate="yes" xml:space="preserve">
        <source>Use AsyncLazy&lt;T&gt;</source>
        <target state="translated">AsyncLazy kullanın&lt;T&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD011b_MessageFormat" translate="yes" xml:space="preserve">
        <source>Invoking or blocking on async code in a Lazy&lt;T&gt; value factory can deadlock.
Use AsyncLazy&lt;T&gt; instead.</source>
        <target state="translated">Bir Lazy&lt;T&gt; değer fabrikasındaki asenkron kod üzerinde çağrı veya engelleme yapma çıkmaza neden olabilir.
Bunun yerine AsyncLazy&lt;T&gt; kullanın.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD012_MessageFormat" translate="yes" xml:space="preserve">
        <source>Provide an instance of JoinableTaskFactory in this call (or another overload) to avoid deadlocks with the main thread.</source>
        <target state="translated">Ana iş parçacığında kilitlenmeleri önlemek için bu çağrıda (veya başka bir aşırı yüklemede) bir JoinableTaskFactory örneği sağlayın.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD012_Title" translate="yes" xml:space="preserve">
        <source>Provide JoinableTaskFactory where allowed</source>
        <target state="translated">İzin veriliyorsa JoinableTaskFactory sağlayın</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD100_CodeFix_Title" translate="yes" xml:space="preserve">
        <source>Change return type to Task</source>
        <target state="translated">Döndürme türünü Task olarak değiştirin</target>
        <note from="MultilingualBuild" annotates="source" priority="2">Task is a type name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD100_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid "async void" methods, because any exceptions not handled by the method will crash the process.</source>
        <target state="translated">"async void" metotları tarafından işlenmeyen tüm özel durumlar işlemi kilitleyeceğinden bunları kullanmayın.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"async void" is a pair of C# keywords. Do not translate them.</note>
      </trans-unit>
      <trans-unit id="VSTHRD100_Title" translate="yes" xml:space="preserve">
        <source>Avoid async void methods</source>
        <target state="translated">Async void metotları kullanmayın</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"async void" is a pair of C# keywords. Do not translate them.</note>
      </trans-unit>
      <trans-unit id="VSTHRD101_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid using async lambda for a void returning delegate type, because any exceptions not handled by the delegate will crash the process.</source>
        <target state="translated">Temsilci tarafından işlenmeyen tüm özel durumlar işlemi kilitleyeceğinden, temsilci türü döndüren bir void için async lambda kullanmayın.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"void" is a C# keyword and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD101_Title" translate="yes" xml:space="preserve">
        <source>Avoid unsupported async delegates</source>
        <target state="translated">Desteklenmeyen async temsilcilerini kullanmayın</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD102_MessageFormat" translate="yes" xml:space="preserve">
        <source>Limit use of synchronously blocking method calls such as JoinableTaskFactory.Run or Task.Result to public entrypoint members where you must be synchronous. Using it for internal members can needlessly add synchronous frames between asynchronous frames, leading to threadpool exhaustion.</source>
        <target state="translated">Zaman uyumlu olmanız gereken genel giriş noktası üyelerinde, JoinableTaskFactory.Run veya Task.Result gibi zaman uyumlu olarak engelleyen metot çağrılarının kullanımını sınırlayın. Bunu iç üyeler için kullanmak, zaman uyumsuz çerçevelerin arasına gereksiz yere zaman uyumlu çerçeveler ekleyerek iş parçacığı havuzunun tükenmesine sebep olabilir.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD102_Title" translate="yes" xml:space="preserve">
        <source>Implement internal logic asynchronously</source>
        <target state="translated">İç mantığı zaman uyumsuz olarak uygulayın</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD103_MessageFormat" translate="yes" xml:space="preserve">
        <source>{0} synchronously blocks. Await {1} instead.</source>
        <target state="translated">{0} zaman uyumlu olarak engeller. Bunun yerine {1} bekleyin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD103_MessageFormat_UseAwaitInstead" translate="yes" xml:space="preserve">
        <source>{0} synchronously blocks. Use await instead.</source>
        <target state="translated">{0} zaman uyumlu olarak engeller. Bunun yerine await kullanın.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD103_Title" translate="yes" xml:space="preserve">
        <source>Call async methods when in an async method</source>
        <target state="translated">Zaman uyumsuz metottayken zaman uyumsuz metotlar çağırın</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD104_MessageFormat" translate="yes" xml:space="preserve">
        <source>Expose an async version of this method that does not synchronously block. Then simplify this method to call that async method within a JoinableTaskFactory.Run delegate.</source>
        <target state="translated">Bu metodun zaman uyumlu olarak engellemeyen zaman uyumsuz bir sürümünü sunun. Sonra bir JoinableTaskFactory.Run temsilcisi içinde bu zaman uyumsuz metoda çağrı yapmak için bu metodu basitleştirin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD104_Title" translate="yes" xml:space="preserve">
        <source>Offer async methods</source>
        <target state="translated">Zaman uyumsuz metotlar sunun</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD105_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid method overloads that assume TaskScheduler.Current. Use an overload that accepts a TaskScheduler and specify TaskScheduler.Default (or any other) explicitly.</source>
        <target state="translated">TaskScheduler.Current varsayan metot aşırı yüklemelerinden kaçının. TaskScheduler kabul eden bir aşırı yükleme kullanın ve TaskScheduler.Default (veya başka birini) açık olarak belirtin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD105_Title" translate="yes" xml:space="preserve">
        <source>Avoid method overloads that assume TaskScheduler.Current</source>
        <target state="translated">TaskScheduler.Current varsayan metot aşırı yüklemelerinden kaçının</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD106_MessageFormat" translate="yes" xml:space="preserve">
        <source>AsyncEventHandler delegates should be invoked via the extension method "TplExtensions.InvokeAsync()" defined in Microsoft.VisualStudio.Threading assembly.</source>
        <target state="translated">AsyncEventHandler temsilcileri, Microsoft.VisualStudio.Threading bütünleştirilmiş kodunda tanımlanan "TplExtensions.InvokeAsync()" genişletme metodu aracılığıyla çağrılmalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD106_Title" translate="yes" xml:space="preserve">
        <source>Use InvokeAsync to raise async events</source>
        <target state="translated">Async olayları tetiklemek için InvokeAsync kullanın</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD107_CodeFix_Title" translate="yes" xml:space="preserve">
        <source>Await using expression</source>
        <target state="translated">Await using ifadesi</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" and "using" are C# keywords and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD107_MessageFormat" translate="yes" xml:space="preserve">
        <source>Missing await operator for "using" expression.</source>
        <target state="translated">“using” ifadesi için await işleci eksik.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await" and "using" are C# keywords and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD107_Title" translate="yes" xml:space="preserve">
        <source>Await Task within using expression</source>
        <target state="translated">using ifadesi içinde await Task</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"await Task" is a C# compound term, and "using" is a C# keyword. These should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD108_MessageFormat" translate="yes" xml:space="preserve">
        <source>Thread affinity checks should be unconditional.</source>
        <target state="translated">İş parçacığı benzeşim denetimleri koşulsuz olmalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD108_Title" translate="yes" xml:space="preserve">
        <source>Assert thread affinity unconditionally</source>
        <target state="translated">İş parçacığı benzeşimini koşulsuz olarak onayla</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD109_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid throwing when not on the main thread while in an async or Task-returning method. Switch to the thread required instead.</source>
        <target state="translated">Ana iş parçacığında değilken, zaman uyumsuz veya Task döndüren metot içinden özel durum oluşturmaktan kaçının. Bunun yerine, gereken iş parçacığına geçin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD109_Title" translate="yes" xml:space="preserve">
        <source>Switch instead of assert in async methods</source>
        <target state="translated">Zaman uyumsuz metotlarda assert yerine switch</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD110_MessageFormat" translate="yes" xml:space="preserve">
        <source>Observe the awaitable result of this method call by awaiting it, assigning to a variable, or passing it to another method.</source>
        <target state="translated">Bu metot çağrısının beklenebilir sonucunu bekleyerek, bir değişkene atayarak veya bir başka metoda geçirerek gözlemleyin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD110_Title" translate="yes" xml:space="preserve">
        <source>Observe result of async calls</source>
        <target state="translated">Zaman uyumsuz çağrıların sonucunu gözlemleyin</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD111_CodeFix_False_Title" translate="yes" xml:space="preserve">
        <source>Add .ConfigureAwait(false)</source>
        <target state="translated">.ConfigureAwait(false) ekleyin</target>
        <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(false)" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD111_CodeFix_True_Title" translate="yes" xml:space="preserve">
        <source>Add .ConfigureAwait(true)</source>
        <target state="translated">.ConfigureAwait(true) ekleyin</target>
        <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(true)" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD111_MessageFormat" translate="yes" xml:space="preserve">
        <source>Add .ConfigureAwait(bool) to your await expression.</source>
        <target state="translated">await ifadenize .ConfigureAwait(bool) ekleyin.</target>
        <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(bool)" and "await" should NOT be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD111_Title" translate="yes" xml:space="preserve">
        <source>Use ConfigureAwait(bool)</source>
        <target state="translated">ConfigureAwait(bool) kullanın</target>
        <note from="MultilingualBuild" annotates="source" priority="2">"ConfigureAwait(bool)" is a reference and should NOT be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD112_CodeFix_Title">
        <source>Add implementation of System.IAsyncDisposable.</source>
        <target state="translated">System.IAsyncDisposable uygulamasını ekleyin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD112_MessageFormat">
        <source>Implement the System.IAsyncDisposable interface when implementing the obsolete Microsoft.VisualStudio.Threading.IAsyncDisposable interface.</source>
        <target state="translated">Eski Microsoft.VisualStudio.Threading.IAsyncDisposable arabirimini uygularken System.IAsyncDisposable arabirimini uygulayın.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD112_Title">
        <source>Implement System.IAsyncDisposable</source>
        <target state="translated">System.IAsyncDisposable arabirimini uygula</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD113_MessageFormat">
        <source>Add a check for System.IAsyncDisposable in the same code block that checks for Microsoft.VisualStudio.Threading.IAsyncDisposable that behaves similarly.</source>
        <target state="translated">Microsoft.VisualStudio.Threading.IAsyncDisposable için benzer şekilde davranıp davranmadığını denetleyen aynı kod bloğunda System.IAsyncDisposable için bir denetim ekleyin.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD113_Title">
        <source>Check for System.IAsyncDisposable</source>
        <target state="translated">System.IAsyncDisposable olup olmadığını denetle</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD114_CodeFix_CompletedTask">
        <source>Use 'Task.CompletedTask' instead</source>
        <target state="translated">Bunun yerine 'Task.CompletedTask' kullanın</target>
        <note>"Task.CompletedTask" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD114_CodeFix_FromResult">
        <source>Use 'Task.FromResult' instead</source>
        <target state="translated">Bunun yerine 'Task.FromResult' kullanın</target>
        <note>"Task.FromResult" should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD114_MessageFormat">
        <source>Avoid returning null from a Task-returning method.</source>
        <target state="translated">Bir Görev döndürme metodundan null döndürmekten kaçının.</target>
        <note>Task is a type name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD114_Title">
        <source>Avoid returning a null Task</source>
        <target state="translated">Null Görev döndürmekten kaçının</target>
        <note>Task is a type name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD200_AddAsync_MessageFormat" translate="yes" xml:space="preserve">
        <source>Use "Async" suffix in names of methods that return an awaitable type.</source>
        <target state="translated">Beklenebilir bir tür döndüren metotların adlarında “Async” ekini kullanın.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD200_CodeFix_Title" translate="yes" xml:space="preserve">
        <source>Rename to {0}</source>
        <target state="translated">{0} olarak yeniden adlandırın</target>
        <note from="MultilingualBuild" annotates="source" priority="2">{0} is a method name.</note>
      </trans-unit>
      <trans-unit id="VSTHRD200_RemoveAsync_MessageFormat" translate="yes" xml:space="preserve">
        <source>Avoid "Async" suffix in names of methods that do not return an awaitable type.</source>
        <target state="translated">Beklenebilir bir tür döndürmeyen metotların adlarında “Async” ekini kullanmaktan kaçının.</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD200_Title" translate="yes" xml:space="preserve">
        <source>Use "Async" suffix for async methods</source>
        <target state="translated">Async metotları için "Async" sonekini kullanın</target>
        <note />
      </trans-unit>
      <trans-unit id="VSTHRD201_CodeFix_Title">
        <source>Call ThrowIfCancellationRequested()</source>
        <target state="translated">ThrowIfCancellationRequested() Çağır</target>
        <note>"ThrowIfCancellationRequested" is a method name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD201_MessageFormat">
        <source>Check for cancellation after calling SwitchToMainThreadAsync(CancellationToken).</source>
        <target state="translated">SwitchToMainThreadAsync(CancellationToken) metodu çağrıldıktan sonra iptal edilip edilmediğini denetleyin.</target>
        <note>"SwitchToMainThreadAsync" is a method name and should not be translated.</note>
      </trans-unit>
      <trans-unit id="VSTHRD201_Title">
        <source>Check cancellation after SwitchToMainThreadAsync</source>
        <target state="translated">SwitchToMainThreadAsync metodundan sonra iptal edilip edilmediğini denetle</target>
        <note>"SwitchToMainThreadAsync" is a method name and should not be translated.</note>
      </trans-unit>
    </body>
  </file>
</xliff>